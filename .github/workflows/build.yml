name: Build

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '33 3 * * 3'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        
    - name: Packages
      shell: bash
      run: |
        wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-focal.list http://packages.lunarg.com/vulkan/lunarg-vulkan-focal.list

        sudo apt-get update
        sudo apt-get install -y build-essential git pip cmake curl libgl-dev libglu1-mesa-dev libegl-dev
        pip install conan

    - name: Sonar Build Wrapper
      shell: bash
      run: |
        curl -L -O https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
        unzip -q build-wrapper-linux-x86.zip
        cmake -DCMAKE_BUILD_TYPE=MinSizeRel -G "CodeBlocks - Unix Makefiles" .
        build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-outputs cmake --build . --target glfw-opengl3-imgui -- -j 2

    - name: Sonar Scanner
      shell: bash
      run: |
        curl -L -O https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.4.0.2170-linux.zip
        unzip sonar-scanner-cli-4.4.0.2170-linux.zip
        sonar-scanner-4.4.0.2170-linux/bin/sonar-scanner
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
